name: NPM Publish

on:
    workflow_dispatch:
        branches:
            - master
            - develop
        inputs:
            version:
                description: 'The version to release (e.g., 1.0.0)'
                required: true

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        defaults:
            run:
                working-directory: src/main/resources/hu/blackbelt/idem
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: setup git config
              run: |
                  git config user.name "blackbelt-oss"
                  git config user.email "oss@blackbelt.hu"

            - name: Set up pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10

            - name: Set up Node.js and configure NPM for publishing
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: 'https://registry.npmjs.org'
                  cache: 'pnpm'
                  cache-dependency-path: 'src/main/resources/hu/blackbelt/idem/pnpm-lock.yaml'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Update package version
              run: pnpm version ${{ inputs.version }} --no-git-tag-version

            - name: Generate ANTLR sources
              run: pnpm run generate:antlr

            - name: Test
              run: pnpm run test

            - name: Build project
              run: pnpm run build

            - name: Publish to NPM
              run: pnpm publish --no-git-checks
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Commit, Tag and Push changes
              run: |
                  git add package.json pnpm-lock.yaml tsconfig.tsbuildinfo
                  git commit -m "chore(release): version ${{ github.inputs.version }}"
                  git tag -a "v${{ github.inputs.version }}" -m "Version ${{ github.inputs.version }}"
                  git push --follow-tags
